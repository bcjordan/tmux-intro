# Server Administration Tmux Configuration
# Author: M91232
# 
# This configuration is optimized for server administration tasks,
# with monitoring features, log watching, and SSH session management.

# ================================================
# BASIC SETTINGS
# ================================================

# Use Ctrl+a as prefix for easier reach
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Start window and pane indices at 1
set -g base-index 1
setw -g pane-base-index 1

# Automatically renumber windows when one is closed
set -g renumber-windows on

# No delay for escape key press
set -sg escape-time 0

# Increase scrollback buffer
set -g history-limit 100000

# Enable mouse support
set -g mouse on

# ================================================
# DISPLAY SETTINGS
# ================================================

# Server monitoring theme (darker colors, red/green for status)
set -g status-style bg=black,fg=white
set -g window-status-current-style bg=red,fg=white,bold
set -g window-status-activity-style bg=yellow,fg=black
set -g pane-border-style fg=white
set -g pane-active-border-style fg=red

# Status bar with system info
set -g status-interval 2
set -g status-left-length 50
set -g status-left "#[fg=red,bold]#h #[fg=yellow]| #[fg=cyan]#S #[fg=yellow]| "
set -g status-right "#[fg=green]#(cut -d ' ' -f 1-3 /proc/loadavg 2>/dev/null || uptime | rev | cut -d' ' -f1-3 | rev) #[fg=cyan]%H:%M:%S #[fg=yellow]%d-%b"

# Window titles
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity on
set -g bell-action any

# ================================================
# KEYBINDINGS
# ================================================

# Reload config
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# Split panes with | and -
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# New window with current path
bind c new-window -c "#{pane_current_path}"

# Better window navigation
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
bind-key Tab last-window

# Pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Sync panes - useful for running the same command on multiple servers
bind S setw synchronize-panes \; display "Sync panes: #{?synchronize-panes,ON,OFF}"

# ================================================
# SERVER ADMIN SPECIFIC FEATURES
# ================================================

# Log monitoring layout - split into 4 panes for different logs
bind L new-session -s logs \; \
    rename-window "system-logs" \; \
    send-keys "tail -f /var/log/syslog" C-m \; \
    split-window -h \; \
    send-keys "tail -f /var/log/auth.log" C-m \; \
    split-window -v \; \
    send-keys "tail -f /var/log/nginx/error.log" C-m \; \
    select-pane -t 0 \; \
    split-window -v \; \
    send-keys "tail -f /var/log/nginx/access.log" C-m \; \
    select-pane -t 0 \; \
    display "Log monitoring layout"

# CPU, Memory, Disk, Network monitoring layout
bind M new-session -s monitoring \; \
    rename-window "resources" \; \
    send-keys "top" C-m \; \
    split-window -h \; \
    send-keys "htop" C-m \; \
    split-window -v \; \
    send-keys "watch df -h" C-m \; \
    select-pane -t 0 \; \
    split-window -v \; \
    send-keys "iftop || nload" C-m \; \
    select-pane -t 0 \; \
    display "System monitoring layout"

# Multi-server management - create window, prompt for servers, connect
bind H command-prompt -p "Connect to servers (comma-separated):" \
   "new-window -n %1 'for i in $(echo %1 | tr \",\" \" \"); do tmux split-window -h \"ssh $i\"; tmux select-layout tiled; done; tmux kill-pane -t 0; tmux select-layout tiled'"

# Quick SSH window
bind S command-prompt -p "SSH to:" "new-window -n %1 'ssh %1'"

# ================================================
# COPY MODE
# ================================================

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "pbcopy"

# Search back to last prompt
bind-key b copy-mode\; send-keys -X start-of-line\; send-keys -X search-backward "❯"\; send-keys -X next-word

# ================================================
# SESSION MANAGEMENT
# ================================================

# Session management bindings
bind C-s choose-session
bind C-d detach-client
bind X confirm-before -p "Kill this session? (y/n)" kill-session

# Save/restore sessions (manual implementation, could also use tmux-resurrect plugin)
bind C-b command-prompt -p "Save session as:" "run-shell 'tmux list-windows -a -F \"tmux neww -t #S:#I #T\"' > ~/.tmux/sessions/%1.session"
bind C-r command-prompt -p "Restore session:" "source-file ~/.tmux/sessions/%1.session"